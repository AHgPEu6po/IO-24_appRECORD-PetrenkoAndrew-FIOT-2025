import React, { useState } from 'react';
import { assets } from "../assets/assets.js";

const tasks = [
    { id: 1, title: "Тема, мета ЛР №2, Місце розташування сайту, звіту" },
    { id: 2, title: "Способи підключення стилів" },
    { id: 3, title: "СЕЛЕКТОРИ" },
    { id: 4, title: "Селектори тегу" },
    { id: 5, title: "Селектори класу" },
    { id: 6, title: "Селектори ідентифікаторів" },
    { id: 7, title: "Інші селектори" },
    { id: 8, title: "CSS: Шрифти Текст Таблиці Фон Контур Списки CSS Просунутий" },
    { id: 9, title: "Висновки до ЛР №2" },
];

const Laboratorna2 = () => {
    const [activeTask, setActiveTask] = useState(1);
    const [sidebarOpen, setSidebarOpen] = useState(false);

    // Функція для відображення контенту на основі activeTask
    const renderContent = () => {
        switch (activeTask) {
            case 1:
                return <div>
                    <div className="text-base font-light leading-relaxed mt-5">
                        <div className="mb-4">
                            <p className="font-semibold text-xl">Тема, мета ЛР №2, Місце розташування сайту, звіту</p>
                        </div>

                        <p>
                            Тема: КАСКАДНІ ТАБЛИЦІ СТИЛІВ. СЕЛЕКТОРИ .ІДЕНТИФІКАТОРИ. СТИЛЬОВЕ ОФОРМЛЕННЯ ТЕКСТОВИХ
                            ЕЛЕМЕНТІВ В HTML-ДОКУМЕНТАХ.

                        </p>

                        <p>
                            Мета: придбати практичні навички роботи з селекторами, ідентифікаторами, списками,
                            різноманітними властивостями кольору і фону, зовнішними та внутрішними відступами,
                            плаваючими елементами, оформленням текстових елементів
                        </p>

                        <ul>
                            <li>
                                <a href="https://github.com/AHgPEu6po/IO-24_appWEB-PetrenkoAndrew-FIOT-2025">Посилання на репозиторій власного WEB-застосунку</a>
                            </li>
                            <li>
                                <a href="https://ahgpeu6po.github.io/IO-24_appWEB-PetrenkoAndrew-FIOT-2025/">Посилання на репозиторій на живу сторінку власного WEB-застосунку</a>
                            </li>
                            <li>
                                <a href="https://github.com/AHgPEu6po/IO-24_appRECORD-PetrenkoAndrew-FIOT-2025">Посилання на репозиторій звітного HTML-документа</a>
                            </li>
                            <li>
                                <a href="https://ahgpeu6po.github.io/IO-24_appRECORD-PetrenkoAndrew-FIOT-2025/">Посилання на репозиторій на живу сторінку звітного HTML-документу</a>
                            </li>
                            <li>
                                Посилання на репозиторій з самостійними роботами:<a></a>
                            </li>
                            <li>
                                Посилання на репозиторій живу сторінку з самостійними роботами:<a></a>
                            </li>
                        </ul>

                    </div>
                </div>;
            case 2:
                return <div>
                    <div className="mb-4 mt-4">
                        <p className="font-semibold text-xl">Способи підключення стилів</p>
                        <p>У веб-розробці існує кілька способів підключення каскадних таблиць стилів (CSS) до
                            HTML-документів. Кожен із цих способів має свої особливості та використовується в залежності
                            від вимог проєкту.</p>

                        <p>Вбудовані стилі (Inline CSS) застосовуються безпосередньо до конкретного елемента за
                            допомогою атрибута style. Цей метод забезпечує швидке налаштування стилів, але ускладнює
                            підтримку та масштабованість коду при великій кількості елементів.</p>

                        <p>Внутрішні стилі (Internal CSS) визначаються у секції head за допомогою тегу style. Вони
                            застосовуються до всіх елементів поточної HTML-сторінки, забезпечуючи централізоване
                            оформлення без необхідності створювати окремі файли стилів.</p>

                        <p>Зовнішні стилі (External CSS) зберігаються у окремих файлах із розширенням .css та
                            підключаються до HTML-документа за допомогою тегу link. Цей метод є найефективнішим для
                            великих проєктів, оскільки дозволяє зберігати стильове оформлення в одному місці та
                            застосовувати його до кількох сторінок одночасно.</p>

                        <p>Імпортовані стилі (Imported CSS) використовуються за допомогою директиви @import. Вони
                            дозволяють підключати один файл стилів до іншого, забезпечуючи модульність та повторне
                            використання коду.</p>

                        <p>Комбінування кількох методів підключення дозволяє забезпечити гнучкість у застосуванні стилів
                            та оптимізувати процес розробки веб-застосунків.</p>

                    </div>
                </div>;
            case 3:
                return <div>
                    <div className="mb-4 mt-4">
                        <p className="font-semibold text-xl">СЕЛЕКТОРИ</p>
                        <p>
                            У CSS існує кілька основних видів селекторів, які дозволяють вибирати HTML-елементи для
                            застосування стилів. Селектори допомагають налаштовувати зовнішній вигляд веб-сторінок,
                            роблячи їх більш привабливими та функціональними.
                        </p>

                        <p>
                            1. **Селектор тегу** — вибирає всі елементи певного тегу. Він застосовується для глобального
                            форматування однакових елементів на сторінці, наприклад, абзаців або заголовків. Це дозволяє
                            встановити однакові стилі для всіх елементів одного типу.
                        </p>

                        <p>
                            2. **Селектор класу** — вибирає всі елементи, які мають однаковий клас. Клас дозволяє
                            групувати елементи за спільними ознаками та застосовувати до них однакові стилі. Один клас
                            може бути використаний для різних елементів, що підвищує гнучкість стилізації.
                        </p>

                        <p>
                            3. **Селектор ідентифікатора** — вибирає один конкретний елемент за його унікальним
                            значенням ідентифікатора. Ідентифікатор має бути унікальним на сторінці та використовується
                            для стилізації окремих елементів, які мають особливе значення або функціональність.
                        </p>

                        <p>
                            4. **Селектор атрибута** — дозволяє вибирати елементи на основі їхніх атрибутів або значень
                            атрибутів. Він використовується для точкової стилізації елементів, які мають певні
                            характеристики, наприклад, поля введення з конкретним типом даних.
                        </p>

                        <p>
                            5. **Універсальний селектор** — вибирає всі елементи на сторінці. Його часто використовують
                            для обнулення стандартних відступів, полів або інших параметрів елементів.
                        </p>

                        <p>
                            6. **Сусідній селектор** — вибирає елемент, який безпосередньо йде після іншого елемента.
                            Він дозволяє стилізувати лише ті елементи, які знаходяться поруч.
                        </p>

                        <p>
                            7. **Дочірній селектор** — вибирає лише ті елементи, які є прямими дочірніми елементами
                            батьківського елемента. Це забезпечує точковий вибір вкладених елементів.
                        </p>

                        <p>
                            8. **Комбінований селектор** — дозволяє одночасно вибирати кілька різних елементів і
                            застосовувати до них однакові стилі. Це зменшує кількість коду та покращує його
                            читабельність.
                        </p>

                        <p>
                            9. **Груповий селектор** — використовується для об'єднання кількох селекторів в один вираз,
                            що дозволяє одночасно застосовувати однакові стилі до різних елементів.
                        </p>

                        <p>
                            10. **Псевдокласи та псевдоелементи** — дозволяють стилізувати елементи у певному стані або
                            створювати додаткові елементи, яких немає в HTML-коді.
                        </p>

                        <p>
                            Різноманіття селекторів у CSS допомагає більш точно і гнучко стилізувати веб-сторінки,
                            роблячи їх зручнішими та привабливішими для користувачів.
                        </p>

                    </div>
                </div>;
            case 4:
                return <div>
                    <div className="mb-4 mt-4">
                        <p className="font-semibold text-xl">Селектори тегу</p>
                        <p>
                            Код для селекторів тегу:
                        </p>
                        <img src={assets.tag_selector} alt="Селектор тегу" />
                        <p>
                            Фото:
                        </p>
                        <img src={assets.tag_selector_photo} alt="Селектор тегу" />
                    </div>
                </div>
            case 5:
                return <div>
                    <div className="mb-4 mt-4">
                        <p>
                            Код для селекторів класу:
                        </p>
                        <img src={assets.class_selector} alt="Селектор класу" />
                        <p>
                            Фото:
                        </p>
                        <img src={assets.class_selector_photo} alt="Селектор класу" />
                    </div>
                </div>
            case 6:
                return <div>
                    <div className="mb-4 mt-4">
                        <p className="font-semibold text-xl">Селектори ідентифікаторів</p>
                    </div>
                </div>
            case 7:
                return <div>
                    <div className="mb-4 mt-4">
                        <p className="font-semibold text-xl">Інші селектори</p>
                        <table className="w-full border-collapse text-center border border-black">
                            <thead>
                                <tr className="bg-yellow-400 text-black">
                                    <th className="border border-black p-3">Селектор</th>
                                    <th className="border border-black p-3">Опис</th>
                                    <th className="border border-black p-3">Приклад</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td className="border border-black p-3">Груповий селектор (,)</td>
                                    <td className="border border-black p-3">Стилізує кілька елементів одночасно</td>
                                    <td className="border border-black p-3">.footer-content-left, .footer-content-right,
                                        .footer-content-center
                                    </td>
                                </tr>
                                <tr className="bg-gray-100">
                                    <td className="border border-black p-3">Селектор нащадків (пробіл)</td>
                                    <td className="border border-black p-3">Вибирає всі вкладені елементи</td>
                                    <td className="border border-black p-3">.navbar .logo, .food-item-name-rating img</td>
                                </tr>
                                <tr>
                                    <td className="border border-black p-3">Псевдоклас (:hover)</td>
                                    <td className="border border-black p-3">Стилізує елемент при наведенні миші</td>
                                    <td className="border border-black p-3">.navbar button:hover</td>
                                </tr>
                                <tr className="bg-gray-100">
                                    <td className="border border-black p-3">Псевдоелемент (::-webkit-scrollbar)</td>
                                    <td className="border border-black p-3">Ховає скролбар</td>
                                    <td className="border border-black p-3">.explore-menu-list::-webkit-scrollbar</td>
                                </tr>
                                <tr>
                                    <td className="border border-black p-3">Анімація (animation)</td>
                                    <td className="border border-black p-3">Додає анімацію до елементів</td>
                                    <td className="border border-black p-3">animation: fadeIn 1s</td>
                                </tr>
                            </tbody>
                        </table>

                    </div>
                </div>
            case 8:
                return <div>
                    <div className="mb-4 mt-4">
                        <p className="font-semibold text-xl">CSS: Шрифти Текст Таблиці Фон Контур Списки CSS
                            Просунутий</p>
                        <p>
                            Шрифти:
                        </p>
                        <img src={assets.font} alt="Шрифти" />
                        <p>
                            Контури:
                        </p>
                        {/*<img src={} alt="Контури"/>*/}
                        <p>
                            Фон:
                        </p>
                        <img src={assets.background} alt="Фон" />
                        <p>
                            Колір тексту:
                        </p>
                        <img src={assets.text_color} alt="Колір тексту" />
                        <img src={assets.text_color_photo} alt="Колір тексту" />
                        <p>
                            CSS-властивості для таблиць
                        </p>
                        <img src={assets.table_lab2} alt="Таблиця" />
                        <img src={assets.table_lab2_photo} alt="Таблиця" />
                        <p>
                            CSS-властивості для багаторівневих списків
                        </p>
                        <img src={assets.list_lab2} alt="Список" />
                        <img src={assets.list_lab2_photo} alt="Список" />

                    </div>
                </div>
            case 9:
                return <div>
                    <div className="mb-4 mt-4">
                        <p className="font-semibold text-xl">ВИСНОВОК</p>
                        <p>
                            Виконання лабораторної роботи №2 дало змогу ознайомитися з основними принципами роботи
                            каскадних таблиць стилів (CSS) та їхнім застосуванням у веб-розробці. В ході роботи було
                            детально вивчено способи застосування селекторів тегів, класів та ідентифікаторів для
                            оформлення HTML-документів. Реалізовано приклади використання різних видів селекторів,
                            зокрема сусідніх, дочірніх, атрибутів та універсальних селекторів, що дозволяють більш
                            гнучко налаштовувати зовнішній вигляд елементів сторінки.
                        </p>

                        <p>
                            Окрему увагу було приділено стилізації текстових елементів, де застосовувалися властивості
                            шрифтів, кольору тексту, фонового оформлення та контурів. Також були реалізовані
                            багаторівневі списки та таблиці, з використанням зовнішніх та внутрішніх відступів,
                            плаваючих елементів та просунутих CSS-властивостей. Це дозволило зрозуміти, як правильно
                            створювати адаптивний та привабливий дизайн для різних типів контенту.
                        </p>

                        <p>
                            Важливою частиною роботи стало створення макету в Figma, який допоміг візуалізувати
                            майбутній вигляд звітного HTML-документа. На основі цього макету було виконано перший етап
                            верстки, створено структуру документа та підключено каскадні таблиці стилів для його
                            оформлення.
                        </p>

                        <p>
                            Отримані знання та практичні навички мають важливе значення для подальшого вивчення
                            веб-технологій, оскільки каскадні таблиці стилів є невід'ємною частиною розробки сучасних
                            веб-застосунків. Робота допомогла краще зрозуміти принципи каскадування, спадкування та
                            специфічності стилів, а також їхній вплив на остаточне відображення сторінки у браузері.
                        </p>

                        <p>
                            У результаті виконання лабораторної роботи було досягнуто поставленої мети, що дозволило
                            закріпити теоретичні знання та набути практичних навичок роботи з CSS для створення
                            стильових оформлень веб-документів.
                        </p>

                    </div>
                </div>;
            default:
                return <div>Виберіть розділ</div>;
        }
    };

    return (
        <div className="min-h-screen">
            <h1 className="text-4xl font-bold text-center mt-8 mb-8">Лабораторна робота 2</h1>
            <div className="flex flex-col lg:flex-row items-start gap-5 mt-5 px-4">
                {/* Sidebar */}
                <div
                    className={`flex flex-col gap-2 w-64 lg:w-48 ${sidebarOpen ? 'block' : 'hidden'} lg:block`}>
                    {tasks.map(task => (
                        <p
                            key={task.id}
                            className={`pl-3 py-2 border rounded transition-all cursor-pointer mt-4`}
                            onClick={() => setActiveTask(task.id)}
                        >
                            {task.title}
                        </p>
                    ))}
                </div>

                <button
                    className="lg:hidden p-2 border border-gray-300 rounded bg-white mb-4"
                    onClick={() => setSidebarOpen(!sidebarOpen)}
                >
                    {sidebarOpen ? 'Закрити меню' : 'Відкрити меню'}
                </button>

                <div className="w-full grid grid-cols-1 gap-4 gap-y-6">
                    {renderContent()}
                </div>
            </div>
        </div>
    );
};

export default Laboratorna2;